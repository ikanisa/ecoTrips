name: CI

on:
  push:
  pull_request:

permissions:
  contents: read
jobs:
  baseline:
    name: Baseline checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: npm

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: latest

      - name: Install Supabase CLI
        run: |
          curl -fsSL https://supabase.com/cli/install | sh -s -- -b "$HOME/.supabase/bin"
          echo "$HOME/.supabase/bin" >> $GITHUB_PATH

      - name: Install npm dependencies
        run: npm install

      - name: Check formatting
        run: |
          deno fmt --check supabase/functions

      - name: Cache TypeScript dependencies
        run: |
          deno cache supabase/functions/**/index.ts

      - name: Build Ops Console
        run: npm run build --workspace ops/console

      - name: Lint Ops Console
        run: npm run lint --workspace ops/console

      - name: Contract smoke tests
        env:
          SUPABASE_TEST_URL: ${{ secrets.SUPABASE_TEST_URL }}
          SUPABASE_TEST_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_TEST_SERVICE_ROLE_KEY }}
          SUPABASE_TEST_ANON_KEY: ${{ secrets.SUPABASE_TEST_ANON_KEY }}
        run: npm run test:contracts

      - name: Observability probe
        env:
          SUPABASE_TEST_URL: ${{ secrets.SUPABASE_TEST_URL }}
          SUPABASE_TEST_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_TEST_SERVICE_ROLE_KEY }}
        run: npm run test:observability

      - name: Observability guardrails
        run: |
          target_count=15
          actual=$(rg -l "withObs" supabase/functions | wc -l | tr -d ' ')
          if [ "$actual" -lt "$target_count" ]; then
            echo "Expected at least $target_count functions using withObs, found $actual" >&2
            exit 1
          fi
          response_logs=$(rg -l '"event":"http\.response"' supabase/functions | wc -l | tr -d ' ')
          if [ "$response_logs" -lt "$target_count" ]; then
            echo "Structured response logging not detected broadly enough (found $response_logs)." >&2
            exit 1
          fi
          echo "withObs wrappers detected: $actual"
          echo "Structured response log emitters: $response_logs"

      - name: Supabase CLI version
        run: |
          SUPABASE_BIN=${SUPABASE_BIN:-$(command -v supabase || echo "$HOME/.supabase/bin/supabase")}
          if [ ! -x "$SUPABASE_BIN" ]; then
            echo "Supabase CLI not found" >&2
            exit 1
          fi
          "$SUPABASE_BIN" --version

      - name: Validate migrations (dry run)
        run: |
          SUPABASE_BIN=${SUPABASE_BIN:-$(command -v supabase || echo "$HOME/.supabase/bin/supabase")}
          if [ ! -x "$SUPABASE_BIN" ]; then
            echo "Supabase CLI not found" >&2
            exit 1
          fi
          "$SUPABASE_BIN" db push --workdir . --dry-run
      - name: Show tree
        run: |
          echo "Repo blueprint:"
          ls -la
          echo
          echo "Key folders:"
          ls -la app packages supabase agent .github docs .changeset || true
      - name: Verify policy files exist
        run: |
          test -f agent/policies/ALLOWLIST.json || (echo "Missing ALLOWLIST.json" && exit 1)
          echo "ALLOWLIST.json is present âœ…"
